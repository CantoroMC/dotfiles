#!/bin/sh

# ===  Program Options  =======================================================

optionsHelp() {
    echo -e "\e[1;97m\ttrash:\e[0m a bash script to trash files"
    echo -e "\e[1;97mOptions: \e[0m"
    echo -e "\e[0;31m\t-e\t--empty    \tto empty the trash\e[0m"
    echo -e "\e[0;32m\t-r\t--restore  \tto restore the selected files\e[0m"
    echo -e "\e[1;33m\t-s\t--show     \tto show the Trash's content\e[0m"
    echo -e "\e[1;97m\t-h\t--help     \tto show this help prompt"
    echo ""
}

# ===  Deleting files  ========================================================
# OBS   deleting directories from dolphin created trashDir/directorysizes but
#       seems unnecessary to restore them

handleDup() {
    if [ -e "$trashDir"/files/"$nameF" ] ; then
        count=1
        while [ -e '"$trashDir"/files/"$nameF" ($count)' ] ; do
            let count++
        done
        nameF="${nameF} (${count})"
    fi
    touch -- "$name".ext
}

trashInfo() {
    echo "[Trash Info]" > "$trashDir"/info/"$2".trashinfo
    echo "Path=$1" >> "$trashDir"/info/"$2".trashinfo
    delDate=$(date "+%m-%d-%yT%H:%M:%S")
    echo "DeletionDate=$delDate" >> "$trashDir"/info/"$2".trashinfo
}

trashFile() {
    for f in "${@}"; do
        fullF=$(readlink -f "$f")
        #dirF=$(dirname "$fullF")
        nameF="${fullF##*/}"
        handleDup
        mv "$fullF" "$trashDir"/files/"$nameF"
        trashInfo "$fullF" "$nameF"
    done
}

# ===  Other Tasks  ===========================================================

# Presence of Hex character trailed by % in trash/info
restoreFile() {
    for f in "$@"; do
        ! [ -e "$trashDir"/files/"$f" ] && echo "$f is not in the trash" && continue
        fullF=$(cat "$trashDir"/info/"$f".trashinfo | grep "Path=" |
            sed "s/Path=//")
        mv "$trashDir"/files/"$f" "$fullF"
        rm -rf "$trashDir"/info/"$f".trashinfo
    done
}

trashOptions() {
    case ${1} in
        "-e"|"--empty")
            rm -rf "$trashDir"/files/*
            rm -rf "$trashDir"/info/*
            [ -e "$trashDir"/directorysizes ] && rm "$trashDir"/directorysizes
            ;;
        "-r"|"--restore")
            restoreFile "${@:2}"
            ;;
        "-s"|"--show")
            ls "$trashDir"/files ;;
        "-h"|"--help")
            optionsHelp ;;
        *)
            echo -e "$1 Is not an existing option."
            optionsHelp ;;
    esac
}

# ===  trash  =================================================================

trashDir="$HOME/.local/share/Trash"

main () {
    if [ -e "${1}" ]; then
        trashFile "$@"
    else
        trashOptions "$@"
    fi
}

main "$@"
