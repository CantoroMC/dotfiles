#!/usr/bin/env zsh

DOTFILES=${DOTFILES:-$HOME'/dotfiles'}
DOTMAN_PKG_DIR=${DOTMAN_PKG_DIR:-$DOTFILES/deploy/arch-pkgs}

dotman::pkgs() {
  sudo pacman -Syu
  sudo pacman -S --needed \
    $(cat "$DOTMAN_PKG_DIR/explicit" | sed '/^[[:blank:]]*#.*/d;s/#.*//;/^[[:blank:]]*$/d')
  sudo pacman -S --needed --asdeps \
    $(cat "$DOTMAN_PKG_DIR/dependent" | sed '/^[[:blank:]]*#.*/d;s/#.*//;/^[[:blank:]]*$/d')
  sudo pacman -S --needed \
    $(cat "$DOTMAN_PKG_DIR/custom" | sed '/^[[:blank:]]*#.*/d;s/#.*//;/^[[:blank:]]*$/d')
}

dotman::skels(){
  mkdir -p "$HOME"/.{cabal,ghc,local/bin}
  mkdir -p "${XDG_CONFIG_HOME:-$HOME/.config}"/{emacs,git,gtk-2.0,gtk-3.0,mpd/playlists,ncmpcpp,neomutt,nnn,nvim,radiotray-ng,surf,vivaldi,zsh}
  mkdir -p "{$XDG_DATA_HOME:-$HOME/.local/share}"/{nvim/site/pack,nvim/site/spell,xorg,fonts,surf,stack}
}

dotman::stow() {
  cd $DOTFILES
  dot_pkg=(${$(ls)/deploy})
  stow -R $dot_pkg
}

dotman::help(){
  cat << _EOF_
  pkgs        - Install pacman packages
  skels       - Create user directories for successive stowing
  stow        - Stow all the dotfiles packages
  help        - Show this help message
_EOF_
}

dotman() {
  case ${1} in
    "pkgs")
      dotman::pkgs
      ;;
    "skels")
      dotman::skels
      ;;
    "stow")
      dotman::stow
      ;;
    "help"|*)
      dotman::help
      ;;
  esac
}

dotman "$@"
