# NcmpCpp Config File

# directories {{{1
ncmpcpp_directory = "~/.config/ncmpcpp"
lyrics_directory = "~/.local/share/lyrics"
mpd_music_dir = "~/Music"
# }}}

# connection settings {{{1
# mpd_host = localhost
# mpd_port = 6600
# mpd_connection_timeout = 5
mpd_crossfade_time = 4
# }}}

# music visualizer {{{1
visualizer_output_name = "Visualizer feed"
visualizer_in_stereo = "yes"
# Available values: spectrum, wave, wave_filled, ellipse.
visualizer_type = "spectrum"
# Defines visualizer's look (string has to be exactly 2 characters long:
# first one is for wave whereas second for frequency spectrum).
visualizer_look = "+|"
# visualizer_look = "●▮"
# Comma separated list of colors to be used in music visualization
# Color name of color number of 256 colors for terminals that support it.
visualizer_color = blue, red, green, yellow, magenta, cyan
# visualizer_color = 41, 83, 119, 155, 185, 215, 209, 203, 197, 161
# }}}

# system encoding {{{1
# system_encoding = ""
# }}}

# delays {{{1
# Time of inactivity (in seconds) after playlist highlighting will be disabled
# (0 = always on).
playlist_disable_highlight_delay = "5"
# Defines how long messages are supposed to be visible.
message_delay_time = "3"
# }}}

# song format {{{1

# Formatting scheme: {{{2

# Tags: {{{3
# |-----|-----------------------|
# | %l  | length                |
# | %f  | filename              |
# | %D  | directory             |
# | %a  | artist                |
# | %A  | album artist          |
# | %t  | title                 |
# | %b  | album                 |
# | %y  | date                  |
# | %n  | track number          |
# | %N  | full track info       |
# | %g  | genre                 |
# | %c  | composer              |
# | %p  | performer             |
# | %d  | disc                  |
# | %C  | comment               |
# | %P  | priority              |
# | $R  | begin right alignment |
# |-----|-----------------------|
# }}}

# If you want to make sure that a part of the format is displayed only when
# certain tags are present, you can archieve it by grouping them with brackets.
# It is also possible to define a list of alternatives by providing several
# groups and separating them with '|'.

# If you want to set limit on maximal length of a tag, just put the
# appropriate number between % and character that defines tag type.

# Markers and Colors: {{{3
# In addition, formats support markers used for text attributes. They are
# followed by character '$'. After that you can put:

# - 0 - default window color (discards all other colors)
# - 1 - black
# - 2 - red
# - 3 - green
# - 4 - yellow
# - 5 - blue
# - 6 - magenta
# - 7 - cyan
# - 8 - white
# - 9 - end of current color
# - b - bold text
# - u - underline text
# - r - reverse colors
# - a - use alternative character set

# If you don't want to use a non-color attribute anymore, just put it again,
# but this time insert character '/' between '$' and attribute character,

# If you want to use 256 colors and/or background colors in formats (the naming
# scheme is described below in section about color definitions), it can be done
# with the syntax $(COLOR), e.g. to set the artist tag to one of the
# non-standard colors and make it have yellow background, you need to write
# $(197_yellow)%a$(end). Note that for standard colors this is interchangable
# with attributes listed above.
# }}}

# }}}

song_list_format = {$4%a$9 $8-$9 }{$5%t}|{$8%f$9}$R{$3(%l)$9}
song_status_format = $b{{$5"%t"$9}} $8by$9$/b {$4%a$9 {$3in$9 $7%b{ (%y)}$9} $9}|{$8%f$9}
song_library_format = {%n - }{%t} {(%l)}|{%f}

# alternative_header_first_line_format = $b$1$aqqu$/a$9 {%t}|{%f} $1$atqq$/a$9$/b
# alternative_header_second_line_format = {{$4$b%a$/b$9}{ - $7%b$9}{ ($4%y$9)}}|{%D}

# alternative_header_first_line_format = "--| $b$4%t$9$/b |--"
# alternative_header_second_line_format = "$5$b%a$/b$8 - $2$b%b$/b$9"

current_item_prefix = $(yellow)$b
current_item_suffix = $/b$(end)
current_item_inactive_column_prefix = $(magenta)$b
current_item_inactive_column_suffix = $/b$(end)

now_playing_prefix = $b
now_playing_suffix = $/b

selected_item_prefix = $r$3
selected_item_suffix = $9$/r
modified_item_prefix = $5> $9

browser_playlist_prefix = "$5playlist$9 "

## Note: attributes are not supported for the following variables.
song_window_title_format = {%a - }{%t}|{%f}

# Available values for browser_sort_mode are "name", "mtime", "format" and "noop".
browser_sort_mode = "format"
browser_sort_format = {%a - }{%t}|{%f} {(%l)}

# }}}

# columns settings {{{1

# syntax of song columns list format is "column column etc."

# - syntax for each column is:
# (width of the column)[color of the column]{displayed tag}
# Note: Width is by default in %, if you want a column to have fixed size, add
# 'f' after the value.

# - color is optional (if you want the default one, leave the field empty).

# Note: You can give a column additional attributes by putting appropriate
# character after displayed tag character. Available attributes are:
#
# - r - column will be right aligned
# - E - if tag is empty, empty tag marker won't be displayed

# You can also:
# - give a column custom name by putting it after attributes, separated with
#   character ':', e.g. {lr:Length} gives you right aligned column of lengths
#   named "Length".
# - define sequence of tags, that have to be displayed in case predecessor is
#   empty in a way similar to the one in classic song format, i.e. using '|'
#   character, e.g. {a|c|p:Owner} creates column named "Owner" that tries to
#   display artist tag and then composer and performer if previous ones are not
#   available.

song_columns_list_format = (20)[yellow]{a} (50)[blue]{t|f:Title} (20)[red]{bE} (7f)[blue]{l}

# }}}

# various settings {{{1

# execute_on_song_change = notify-send --urgency="low" -t 3000 -i exaile-play "Now Playing" "$(mpc current)"
# execute_on_player_state_change = ""

playlist_show_mpd_host = no
playlist_show_remaining_time = yes
playlist_shorten_total_times = yes
playlist_separate_albums = no

# Possible display modes: classic, columns.
playlist_display_mode = columns
browser_display_mode = columns
search_engine_display_mode = columns
playlist_editor_display_mode = columns

discard_colors_if_item_is_selected = yes
#
show_duplicate_tags = yes
incremental_seeking = yes
seek_time = 1

volume_change_step = 2

autocenter_mode = no
centered_cursor = yes

progressbar_look = ━━╸

# Available values: database, playlist.
default_place_to_search_in = database

# Available values: classic, alternative.
 user_interface = classic

data_fetching_delay = yes

# Available values: artist, album_artist, date, genre, composer, performer.
media_library_primary_tag = artist
media_library_albums_split_by_date = no

# Available values: wrapped, normal.
default_find_mode = wrapped
#
default_tag_editor_pattern = %a - %t

header_visibility = yes
statusbar_visibility = yes
titles_visibility = no

header_text_scrolling = yes
cyclic_scrolling = yes
lines_scrolled = 1

follow_now_playing_lyrics = yes
fetch_lyrics_for_current_song_in_background = no
store_lyrics_in_song_dir = no
generate_win32_compatible_filenames = yes

allow_for_physical_item_deletion = no
lastfm_preferred_language = en
space_add_mode = add_remove
show_hidden_files_in_local_browser = yes

# How shall screen switcher work?
#
# - "previous" - switch between the current and previous screen.
# - "screen1,...,screenN" - switch between given sequence of screens.
#
# Screens available for use: help, playlist, browser, search_engine,
# media_library, playlist_editor, tag_editor, outputs, visualizer, clock,
# lyrics, last_fm.
#
screen_switcher_mode = playlist, browser, media_library
startup_screen = media_library

startup_slave_screen = ""
startup_slave_screen_focus = no

# Default width of locked screen (in %). Acceptable values are from 20 to 80.
locked_screen_width_part = 50
ask_for_locked_screen_width_part = no

jump_to_now_playing_song_at_start = yes

ask_before_clearing_playlists = yes

clock_display_seconds = yes

display_volume_level = yes

display_bitrate = yes

display_remaining_time = no

# Available values: none, basic, extended, perl.
regular_expressions = perl

# Ignore leading "The" word while sorting items in browser, tags in media library, etc.
ignore_leading_the = yes

# Ignore diacritics while searching and filtering lists.
ignore_diacritics = no

block_search_constraints_change_if_items_found = yes

mouse_support = no
mouse_list_scroll_whole_page = no

empty_tag_marker = <empty>
tags_separator = " | "
tag_editor_extended_numeration = yes

media_library_sort_by_mtime = no

enable_window_title = yes

# - 1 - use mpd built-in searching (no regexes, pattern matching)
# - 2 - use ncmpcpp searching (pattern matching with support for regexes, but
#       if your mpd is on a remote machine, downloading big database to process
#       it can take a while
# - 3 - match only exact values (this mode uses mpd function for searching in
#       database and local one for searching in current playlist)
#

search_engine_default_search_mode = 2

external_editor = nvim
use_console_editor = yes

# }}}

# colors definitions {{{1

# Cheat Sheet {{{2
# It is possible to set a background color by setting a color value
# "<foreground>_<background>", e.g. red_black will set foregound color to red
# and background color to black.
#
# In addition, for terminals that support 256 colors it is possible to set one
# of them by using a number in range [1, 256] instead of color name,
# e.g. numerical value corresponding to red_black is 2_1. To find out if the
# terminal supports 256 colors, run ncmpcpp and check out the bottom of the
# help screen for list of available colors and their numerical values.
#
# What is more, there are two special values for the background color:
# "transparent" and "current". The first one explicitly sets the background to
# be transparent, while the second one allows you to preserve current
# background color and change only the foreground one. It's used implicitly
# when background color is not specified.
#
# Moreover, it is possible to attach format information to selected color
# variables by appending to their end a colon followed by one or more format
# flags, e.g. black:b or red:ur. The following variables support this syntax:
# visualizer_color, color1, color2, empty_tag_color, volume_color,
# state_line_color, state_flags_color, progressbar_color,
# progressbar_elapsed_color, player_state_color, statusbar_time_color,
# alternative_ui_separator_color.
#
# Note: due to technical limitations of older ncurses version, if 256 colors
# are used there is a possibility that you'll be able to use only colors with
# transparent background.
# }}}

colors_enabled = yes
empty_tag_color = magenta
header_window_color = green
volume_color = default:b
state_line_color = default
state_flags_color = red:b
main_window_color = white
color1 = white
color2 = green
progressbar_color = black:b
progressbar_elapsed_color = green:b
statusbar_color = yellow
statusbar_time_color = blue:b
player_state_color = default:b
alternative_ui_separator_color = black:b
window_border_color = green
active_window_border = red

# }}}

# vim:fdm=marker:nospell
